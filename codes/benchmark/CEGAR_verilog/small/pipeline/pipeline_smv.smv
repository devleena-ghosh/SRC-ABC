module \main ( # 1 "pipeline_smv.v"
\dataIn ,\dataOut ,\c1 ,\c2 ,\clock ,\reset ){ # 2 "pipeline_smv.v"
input \dataIn  : array 310..0 of boolean resolve; # 2 "pipeline_smv.v"
input \c1  : array 310..0 of boolean resolve; # 2 "pipeline_smv.v"
input \c2  : array 310..0 of boolean resolve; # 3 "pipeline_smv.v"
input \clock  : boolean resolve; # 4 "pipeline_smv.v"
input \reset  : boolean resolve; # 5 "pipeline_smv.v"
output \dataOut  : array 310..0 of boolean resolve; # 6 "pipeline_smv.v"
 # 6 "pipeline_smv.v"
\dataOut  : array 310..0 of boolean resolve; # 8 "pipeline_smv.v"
 # 8 "pipeline_smv.v"
\stageOne  : array 310..0 of boolean resolve; # 9 "pipeline_smv.v"
 # 9 "pipeline_smv.v"
\stageTwo  : array 310..0 of boolean resolve; # 11 "pipeline_smv.v"
 # 11 "pipeline_smv.v"
\tmp_stageOne  : array 310..0 of boolean resolve; # 12 "pipeline_smv.v"
 # 12 "pipeline_smv.v"
\tmp_stageTwo  : array 310..0 of boolean resolve;{ # 18 "pipeline_smv.v"
init(\dataOut ) := 0; # 19 "pipeline_smv.v"
init(\stageTwo ) := 0; # 20 "pipeline_smv.v"
init(\stageOne ) := 0; # 21 "pipeline_smv.v"
init(\tmp_stageTwo ) := 0; # 22 "pipeline_smv.v"
init(\tmp_stageOne ) := 0;}do { # 27 "pipeline_smv.v"
next(\tmp_stageOne ) := \stageOne ; # 28 "pipeline_smv.v"
next(\tmp_stageTwo ) := \stageTwo ; # 29 "pipeline_smv.v"
next(\stageOne ) := (\dataIn +\c1 ); # 30 "pipeline_smv.v"
next(\stageTwo ) := (\stageOne &\c2 );if((~\reset )) # 32 "pipeline_smv.v"
next(\dataOut ) := (\stageTwo +\stageOne ); else  # 34 "pipeline_smv.v"
next(\dataOut ) := 0;}do { # 38 "pipeline_smv.v"
\property : assert ((\dataOut =(\tmp_stageTwo +\tmp_stageOne ))|(\dataOut =0));}}

